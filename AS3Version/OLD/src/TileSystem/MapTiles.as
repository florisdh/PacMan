package TileSystem
{
	/**
	 * ...
	 * @author FDH
	 */
	public class MapTiles 
	{
		// -- Tile Types in map -- //
		public static const WALLS:Vector.<int> = new <int> [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 34, 35 ];
		public static const COINS:Vector.<int> = new <int> [ 9, 12 ];
		
		// Tile checks
		public static function IsWall(tile:int):Boolean
		{
			for each (var c:int in WALLS) 
			{
				if (tile == c)
				{
					return true;
				}
			}
			return false;
		}
		
		// -- Maps -- //
		public static const Map1Width:int = 28;
		public static const Map1Height:int = 31;
		public static const Map1Tiles:Vector.<int>  = new <int>
		[
			0,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	29,	28,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	2,
			8,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	11,	13,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	10,
			8,	12,	3,	4,	4,	5,	12,	3,	4,	4,	4,	5,	12,	11,	13,	12,	3,	4,	4,	4,	5,	12,	3,	4,	4,	5,	12,	10,
			8,	12,	11,	-1,	-1,	13,	12,	11,	-1,	-1,	-1,	13, 12, 11,	13,	12,	11,	-1,	-1,	-1,	13,	12,	11,	-1,	-1,	13,	12,	10,
			8,	12,	19,	20,	20,	21,	12,	19,	20,	20,	20,	21,	12,	19,	21,	12,	19,	20,	20,	20,	21,	12,	19,	20,	20,	21,	12,	10,
			8, 	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	10,
			8,	12,	3,	4,	4,	5,	12,	3,	5,	12,	3,	4,	4,	4,	4,	4,	4,	5,	12,	3,	5,	12,	3,	4,	4,	5,	12,	10,
			8,	12,	19,	20,	20,	21,	12,	11,	13, 12,	19,	20,	20,	5,	3,	20,	20,	21,	12,	11,	13, 12, 19,	20,	20,	21,	12,	10,
			8,	12,	12,	12,	12,	12,	12,	11,	13,	12,	12,	12,	12,	11,	13,	12,	12,	12,	12,	11,	13,	12,	12,	12,	12,	12,	12,	10,
			16,	17,	17,	17,	17,	5,	12, 11,	19,	20,	20,	5,	-1,	11,	13,	-1,	3,	4,	4,	21,	13,	12,	3,	17,	17,	17,	17,	18,
			-1,	-1,	-1,	-1,	-1,	8,	12,	11,	3,	20,	20,	21,	-1,	19,	21,	-1,	19,	20,	20,	5,	13,	12,	10,	-1,	-1,	-1,	-1,	-1,
			-1,	-1,	-1,	-1,	-1,	8,	12,	11,	13,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	11,	13,	12,	10,	-1,	-1,	-1,	-1,	-1,
			-1,	-1,	-1,	-1,	-1,	8,	12,	11,	13,	-1,	6,	17,	23,	30,	30,	22,	17,	7,	-1,	11,	13,	12,	10,	-1,	-1,	-1,	-1,	-1,
			1,	1,	1,	1,	1,	21,	12,	19,	21,	-1,	10,	-1,	-1,	-1,	-1,	-1,	-1,	8,	-1,	19,	21,	12,	19,	1,	1,	1,	1,	1,
			-1,	-1,	-1,	-1,	-1,	-1,	12,	-1,	-1,	-1,	10,	-1,	-1,	-1,	-1,	-1,	-1,	8,	-1,	-1,	-1,	12,	-1,	-1,	-1,	-1,	-1,	-1,
			17,	17,	17,	17,	17,	5,	12,	3,	5,	-1,	10,	-1,	-1,	-1,	-1,	-1,	-1,	8,	-1,	3,	5,	12,	3,	17,	17,	17,	17,	17,
			-1,	-1,	-1,	-1,	-1,	8,	12,	11,	13,	-1,	14,	1,	1,	1,	1,	1,	1,	15,	-1,	11,	13,	12,	10,	-1,	-1,	-1,	-1,	-1,
			-1,	-1,	-1,	-1,	-1,	8,	12,	11,	13,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	11,	13,	12,	10,	-1,	-1,	-1,	-1,	-1,
			-1,	-1,	-1,	-1,	-1,	8,	12,	11,	13,	-1,	3,	4,	4,	4,	4,	4,	4,	5,	-1,	11,	13,	12,	10,	-1,	-1,	-1,	-1,	-1,
			0,	1,	1,	1,	1,	21,	12,	19,	21,	-1,	19,	20,	20,	5,	3,	20,	20,	21,	-1,	19,	21,	12,	19,	1,	1,	1,	1,	2,
			8,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	11,	13,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	10,
			8,	12,	3,	4,	4,	5,	12,	3,	4,	4,	4,	5,	12,	11,	13,	12,	3,	4,	4,	4,	5,	12,	3,	4,	4,	5,	12,	10,
			8,	12,	19,	20,	5,	13,	12,	19,	20,	20,	20,	21,	12,	19,	21,	12,	19,	20,	20,	20,	21,	12,	11,	3,	20,	21,	12,	10,
			8,	12,	12,	12,	11,	13,	12,	12,	12,	12,	12,	12,	12,	-1,	-1,	12,	12,	12,	12,	12,	12,	12,	11,	13,	12,	12,	12,	10,
			34,	4,	5,	12,	11,	13,	12,	3,	5,	12,	3,	4,	4,	4,	4,	4,	4,	5,	12,	3,	5,	12,	11,	13,	12,	3,	4,	35,
			26,	20,	21,	12,	19,	21,	12,	11,	13,	12,	19,	20,	20,	5,	3,	4,	4,	21,	12,	11,	13,	12,	19,	21,	12,	19,	20,	27,
			8,	12,	12,	12,	12,	12,	12,	11,	13,	12,	12,	12,	12,	11,	13,	12,	12,	12,	12,	11,	13,	12,	12,	12,	12,	12,	12,	10,
			8,	12,	3,	4,	4,	4,	4,	21,	19,	4,	4,	5,	12,	11,	13,	12,	3,	4,	4,	21,	19,	4,	4,	4,	4,	5,	12,	10,
			8,	12,	19,	20,	20,	20,	20,	20,	20,	20,	20,	21,	12,	19,	21,	12,	19,	20,	20,	20,	20,	20,	20,	20,	20,	21,	12,	10,
			8,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	12,	10,
			16,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	18
		];
	}

}